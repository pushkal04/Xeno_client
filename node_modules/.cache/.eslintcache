[{"/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/index.js":"1","/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/App.js":"2","/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/components/LandingPage.js":"3","/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/components/Login/index.jsx":"4","/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/components/Main/index.jsx":"5","/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/components/Signup/index.jsx":"6"},{"size":559,"mtime":1658938693096,"results":"7","hashOfConfig":"8"},{"size":654,"mtime":1658944807431,"results":"9","hashOfConfig":"8"},{"size":2072,"mtime":1658946451831,"results":"10","hashOfConfig":"8"},{"size":1875,"mtime":1658955416088,"results":"11","hashOfConfig":"8"},{"size":5251,"mtime":1658955427500,"results":"12","hashOfConfig":"8"},{"size":2350,"mtime":1658955436289,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rvuk6b",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/index.js",[],[],"/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/App.js",[],[],"/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/components/LandingPage.js",["34","35","36"],[],"import React from 'react'\nimport axios from \"axios\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport './LandingPage.css'\n\nfunction LandingPage() {\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n        window.location.reload();\n    };\n    return (\n        <div className=\"text-center\">\n\n            <div className=\"cover-container d-flex h-100 p-3 mx-auto flex-column \">\n\n                <main role=\"main\" className=\"inner cover mt-5\">\n                    <h1 className=\"cover-heading\">Landing Page</h1>\n                    <p className=\"lead\">If you’re on the hunt for the best and most informative car blogs to provide you with all the latest updates in the automotive world, then you’re in the right place. Here you’ll find the top 55 auto blogs online. Such car blogs are in abundance on the web, but not all of them have all the necessary info that an auto enthusiast finds useful. So we’ve decided to help you out a bit, and present you with the absolute best among all the high-quality auto blogs.\n                      Whether you’re a new car enthusiast or an old-timer with plenty of advice to dispense to those who’ve just found their passion in cars, these car blogs can give you the tips, tricks, techniques, and updates about anything automotive.</p>\n                    <p className=\"lead\">\n                        <a onClick={handleLogout} className=\"btn btn-lg btn-secondary\">Logout</a>\n                    </p>\n                    <p className=\"lead\">\n                        <Link to = \"/contact\">\n                        <a className=\"btn btn-lg btn-secondary\">Contact Page</a>\n                        </Link>\n                    </p>\n                </main>\n\n                <footer className=\"mastfoot mt-auto\">\n                    <div className=\"inner\">\n                        <p>Made by Pushkal Mondal</p>\n                    </div>\n                </footer>\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage","/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/components/Login/index.jsx",[],[],"/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/components/Main/index.jsx",["37","38","39","40","41"],[],"import styles from \"./styles.module.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\n\nconst Main = () => {\n\n  const [fName, setfName] = useState('')\n  const [lName,setlName] = useState('')\n  const [email, setEmail] = useState('')\n  const [desc, setdesc] = useState('')\n  const [error, setError] = useState('')\n  const[submitted, setSubmitted] = useState(false)\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    const info = {fName, lName, email, desc}\n    \n    const response = await fetch('http://ns.gyfo.business/api/auth/contact', {\n      method: 'POST',\n      body: JSON.stringify(info),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    const json = await response.json()\n\n    if (!response.ok) {\n      setError(json.error)\n    }\n    if (response.ok) {\n      setError(null)\n      setfName('')\n      setlName('')\n      setEmail('')\n      setdesc('')\n      setSubmitted(true)\n    }\n\n  }\n\n\n\n    const handleLogout = () => {\n        localStorage.removeItem(\"token\");\n        navigate(\"/login\");\n        window.location.reload();\n    };\n\n    return (\n        <div style={{ \"backgroundColor\": \"#ccecff\", \"borderRadius\": \"5px\" }} className=\"container mt-5 col-md-6 p-4 \">\n            <form id=\"contact-form\" role=\"form\">\n                <h1 className = \"mb-5\">Contact Us</h1>\n\n                <div className=\"messages\"></div>\n\n                <div className=\"controls\">\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <label for=\"form_name\">Firstname *</label>\n                                <input onChange={(e) => setfName(e.target.value)} value = {fName} id=\"form_name\" type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Please enter your firstname *\" required=\"required\" data-error=\"Firstname is required.\" />\n                                <div className=\"help-block with-errors\"></div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <label for=\"form_lastname\">Lastname *</label>\n                                <input onChange={(e) => setlName(e.target.value)} value = {lName} id=\"form_lastname\" type=\"text\" name=\"surname\" className=\"form-control\" placeholder=\"Please enter your lastname *\" required=\"required\" data-error=\"Lastname is required.\" />\n                                <div className=\"help-block with-errors\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row mb-3\">\n                        <div className=\"col-md-6\">\n                            <div className=\"form-group\">\n                                <label for=\"form_email\">Email *</label>\n                                <input onChange={(e) => setEmail(e.target.value)} value = {email} id=\"form_email\" type=\"email\" name=\"email\" className=\"form-control\" placeholder=\"Please enter your email *\" required=\"required\" data-error=\"Valid email is required.\" />\n                                <div className=\"help-block with-errors\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <div className=\"form-group\">\n                                <label for=\"form_message\">Message *</label>\n                                <textarea onChange={(e) => setdesc(e.target.value)} value = {desc} id=\"form_message\" name=\"message\" className=\"form-control\" placeholder=\"Message for me *\" rows=\"4\" required=\"required\" data-error=\"Please, leave us a message.\"></textarea>\n                                <div className=\"help-block with-errors\"></div>\n                            </div>\n                        </div>\n                        <div className=\"col-md-12\">\n                            <input type=\"submit\" className=\"btn btn-success btn-send mt-2\" value=\"Send message\" onClick={handleSubmit}/>\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <Link to = \"/\" style = {{\"textDecoration\" : \"none\" }}>\n                            <p className = \"lead mt-4\" style = {{\"textDecoration\" : \"none\" }}>\n                                <a style={{ \"cursor\": \"pointer\", \"color\": \"black\"}}>Back</a>\n                            </p>\n                            </Link>\n                            <p className=\"text-muted mt-3\">\n                                <a style={{ \"cursor\": \"pointer\", \"color\": \"blue\" }} onClick={handleLogout} target=\"_blank\">Logout</a>.</p>\n                        </div>\n                        {submitted ? <p classNameName = \"text-success\">Successfully submitted</p> : null}   \n                    </div>\n                </div>\n\n            </form>\n        </div>\n\n    );\n};\n\nexport default Main;","/Users/pushkalmondal/Desktop/Development/XenonStack/client/src/components/Signup/index.jsx",[],[],{"ruleId":"42","severity":1,"message":"43","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":13},{"ruleId":"46","severity":1,"message":"47","line":24,"column":25,"nodeType":"48","endLine":24,"endColumn":88},{"ruleId":"46","severity":1,"message":"47","line":28,"column":25,"nodeType":"48","endLine":28,"endColumn":65},{"ruleId":"42","severity":1,"message":"49","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":14},{"ruleId":"42","severity":1,"message":"50","line":13,"column":10,"nodeType":"44","messageId":"45","endLine":13,"endColumn":15},{"ruleId":"51","severity":1,"message":"52","line":55,"column":13,"nodeType":"48","endLine":55,"endColumn":49},{"ruleId":"46","severity":1,"message":"47","line":103,"column":33,"nodeType":"48","endLine":103,"endColumn":85},{"ruleId":"46","severity":1,"message":"47","line":107,"column":33,"nodeType":"48","endLine":107,"endColumn":124},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'styles' is defined but never used.","'error' is assigned a value but never used.","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided."]